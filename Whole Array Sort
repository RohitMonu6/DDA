Input                      Output

10 13 12 11                     1  2  3  4
14 15  9  8      ------------   5  6  7  8
 4  5  1  3      ------------   9 10 11 12
 2  7 16  6                    13 14 15 16

import java.util.Scanner;
public class Sort
{
    public static void main(String args[])
    {
        Scanner in = new Scanner(System.in);
        System.out.print("Enter No. of rows ");   //To accept Number of Rows
        int r = in.nextInt();
        System.out.print("Enter No. of Column ");  //To accept Number of Column
        int c = in.nextInt();
        int k = 0;    //To store element in single dimension array
        int arrs[] = new int[r*c];    //A single dimension array
        int arr[][] = new int[r][c];   //A double dimension array
        for(int i = 0;i<r;i++)   //To Accept Element in DDA
        {
            for(int j = 0;j<c;j++)
            {
                System.out.print("("+i+","+j+")-");
                arr[i][j] = in.nextInt();
                arrs[k] = arr[i][j];  //To accept element in Single dimension Array
                k++;
            } 
        }
        int index;  // to get the element at that array index 
        int sm=0;  // To store the Smallest number
        for(int i = 0;i<arrs.length;i++)
        {
            index = i;
            for(int j = i+1;j<arrs.length;j++)
            {
                if(arrs[j]<arrs[index])     //To Get the Smaller no. than the index value
                    index = j;
            }
            sm = arrs[index];       //Swapping
            arrs[index] = arrs[i];      //Swapping
            arrs[i] = sm;       //Swapping
        }
        k = 0;      // To feel The DDA with sorted Elements
        for(int i = 0;i<r;i++)
        {
            for(int j = 0;j<c;j++)
            {
                arr[i][j] = arrs[k];
                k++;
            } 
        }
        for(int i = 0;i<r;i++)      // Display
        {
            for(int j = 0;j<c;j++)
            {
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
    }
}


Input                      Output

10 13 12 11                     1  2  3  4
14 15  9  8      ------------   5  6  7  8
 4  5  1  3      ------------   9 10 11 12
 2  7 16  6                    13 14 15 16
